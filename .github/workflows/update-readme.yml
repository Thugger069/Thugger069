name: Update README with Terminal

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      skip-svg:
        description: 'Skip SVG generation'
        required: false
        default: false
        type: boolean
  
  # Run on pushes to main
  push:
    branches: [ main ]

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Debug info
        run: |
          echo "üïí Trigger: ${{ github.event_name }}"
          echo "üéØ Branch: ${{ github.ref }}"
          echo "üë§ Actor: ${{ github.actor }}"
          ls -la

      - name: Create directories
        run: |
          mkdir -p dist scripts
          echo "üìÅ Created directories"

      - name: Check for SVG generator
        id: check-svg-script
        run: |
          if [ -f "scripts/generate-terminal-svg.js" ]; then
            echo "üìÑ SVG generator found"
            echo "script-exists=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå SVG generator not found"
            echo "script-exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create SVG generator script
        if: steps.check-svg-script.outputs.script-exists == 'false'
        run: |
          cat > scripts/generate-terminal-svg.js << 'EOF'
          const fs = require('fs');
          const path = require('path');

          const DIST_DIR = path.resolve(__dirname, '../dist');
          if (!fs.existsSync(DIST_DIR)) fs.mkdirSync(DIST_DIR, { recursive: true });

          const DISPLAY_NAME = "…¨…ß…õ …†ƒ±…¨∆à…ß";
          const CURRENT_TIME = new Date().toUTCString().replace(/GMT/, 'UTC');

          // Generate random load averages
          const load1 = (Math.random() * 0.8 + 0.1).toFixed(2);
          const load2 = (Math.random() * 0.8 + 0.2).toFixed(2);
          const load3 = (Math.random() * 0.8 + 0.1).toFixed(2);
          const LOAD_AVG = `${load1} ${load2} ${load3}`;

          const lines = [
            `Last login: ${CURRENT_TIME} on ttys001`,
            `${DISPLAY_NAME}@github ~ % whoami`,
            `${DISPLAY_NAME}`,
            '',
            `${DISPLAY_NAME}@github ~ % uname -a`,
            `Darwin github-pro 22.5.0 Darwin Kernel Version 22.5.0: x86_64`,
            '',
            `${DISPLAY_NAME}@github ~ % uptime`,
            `${CURRENT_TIME} up 14 days, 2:51, 1 user, load averages: ${LOAD_AVG}`,
            '',
            `${DISPLAY_NAME}@github ~ % ls -la Projects/`,
            `total 48`,
            `drwxr-xr-x   9 ${DISPLAY_NAME}  staff   288 Jun 15 10:30 .`,
            `drwxr-xr-x   6 ${DISPLAY_NAME}  staff   192 Jun 15 10:30 ..`,
            `drwxr-xr-x   8 ${DISPLAY_NAME}  staff   256 Jun 15 10:30 .git`,
            `-rw-r--r--   1 ${DISPLAY_NAME}  staff   113 Jun 15 10:30 .gitignore`,
            `drwxr-xr-x   7 ${DISPLAY_NAME}  staff   224 Jun 15 10:30 DevOps`,
            `drwxr-xr-x   6 ${DISPLAY_NAME}  staff   192 Jun 15 10:30 OpenSource`,
            `drwxr-xr-x   5 ${DISPLAY_NAME}  staff   160 Jun 15 10:30 Scripts`,
            `-rw-r--r--   1 ${DISPLAY_NAME}  staff  1024 Jun 15 10:30 README.md`,
            `-rw-r--r--   1 ${DISPLAY_NAME}  staff   925 Jun 15 10:30 TODO.md`,
            '',
            `${DISPLAY_NAME}@github ~ % docker ps`,
            `CONTAINER ID   IMAGE           COMMAND                  STATUS       PORTS     NAMES`,
            `a1b2c3d4e5f6   nginx:alpine    "nginx -g 'daemon off;" Up 2 hours   80/tcp    webserver`,
            `f6e5d4c3b2a1   redis:7-alpine  "docker-entrypoint.s‚Ä¶"  Up 2 hours   6379/tcp  cache`,
            '',
            `${DISPLAY_NAME}@github ~ %`
          ];

          const theme = {
            background: '#1a1b26',
            text: '#c0caf5',
            accent: '#7dcfff',
            border: '#2ac3de',
            headerBg: '#16161e'
          };

          const LINE_HEIGHT = 18;
          const PADDING = 20;
          const height = lines.length * LINE_HEIGHT + PADDING * 2 + 30;
          const maxLineLength = Math.max(...lines.map(line => line.length));
          const CHAR_WIDTH = 8;
          const width = Math.max(800, maxLineLength * CHAR_WIDTH + PADDING * 2);

          const svgDark = `<svg width="${width}" height="${height}" xmlns="http://www.w3.org/2000/svg">
            <defs>
              <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" stop-color="${theme.background}" />
                <stop offset="100%" stop-color="#16161e" />
              </linearGradient>
            </defs>
            
            <rect width="100%" height="100%" rx="12" ry="12" fill="url(#bgGradient)" 
                  stroke="${theme.border}" stroke-width="2"/>
            
            <rect x="0" y="0" width="100%" height="30" rx="12" ry="12" fill="${theme.headerBg}" 
                  stroke="${theme.border}" stroke-width="2"/>
            <circle cx="15" cy="15" r="4" fill="#ff5f56"/>
            <circle cx="30" cy="15" r="4" fill="#ffbd2e"/>
            <circle cx="45" cy="15" r="4" fill="#27ca3f"/>
            <text x="60" y="18" style="font-family: monospace; font-size: 12px; fill: ${theme.text}; font-weight: bold;">${DISPLAY_NAME}@github: ~</text>
            
            <style>
              .line { font-family: monospace; font-size: 14px; fill: ${theme.text}; white-space: pre; }
              .accent { fill: ${theme.accent}; font-weight: bold; }
            </style>
            
            ${lines.map((line, idx) => 
              `<text x="${PADDING}" y="${PADDING + 30 + idx * LINE_HEIGHT}" class="line">${line}</text>`
            ).join('')}
            
            <text x="${PADDING}" y="${PADDING + 30 + (lines.length - 1) * LINE_HEIGHT + 4}" 
                  class="accent">‚ñà
              <animate attributeName="opacity" values="1;0;1" dur="1s" repeatCount="indefinite" />
            </text>
          </svg>`;

          // Light theme
          const lightTheme = {
            background: '#ffffff',
            text: '#333333',
            accent: '#0366d6',
            border: '#d1d5da',
            headerBg: '#f6f8fa'
          };

          const svgLight = svgDark
            .replace(new RegExp(theme.background, 'g'), lightTheme.background)
            .replace(new RegExp(theme.text, 'g'), lightTheme.text)
            .replace(new RegExp(theme.accent, 'g'), lightTheme.accent)
            .replace(new RegExp(theme.border, 'g'), lightTheme.border)
            .replace(new RegExp(theme.headerBg, 'g'), lightTheme.headerBg);

          fs.writeFileSync(path.join(DIST_DIR, 'terminal.svg'), svgDark);
          fs.writeFileSync(path.join(DIST_DIR, 'terminal-light.svg'), svgLight);
          console.log("‚úÖ Terminal SVGs generated!");
          EOF
          echo "üìù Created SVG generator script"

      - name: Generate terminal SVGs
        id: generate-svg
        run: |
          if [ "${{ inputs.skip-svg }}" = "true" ] && [ -f "dist/terminal.svg" ]; then
            echo "‚è≠Ô∏è Skipping SVG generation"
            echo "svg-generated=false" >> $GITHUB_OUTPUT
          else
            echo "üé® Generating terminal SVGs..."
            if node scripts/generate-terminal-svg.js; then
              echo "‚úÖ SVG generation successful"
              echo "svg-generated=true" >> $GITHUB_OUTPUT
              ls -la dist/
            else
              echo "‚ùå SVG generation failed"
              echo "svg-generated=false" >> $GITHUB_OUTPUT
              exit 1
            fi
          fi

      - name: Run update script
        id: update-script
        run: |
          echo "üöÄ Running update script..."
          if [ -f "scripts/update-terminal.sh" ]; then
            chmod +x scripts/update-terminal.sh
            ./scripts/update-terminal.sh
            echo "script-completed=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Update script not found"
            echo "script-completed=false" >> $GITHUB_OUTPUT
          fi

      - name: Manual update fallback
        if: steps.update-script.outputs.script-completed == 'false'
        run: |
          echo "üîÑ Using manual update fallback..."
          
          CURRENT_TIME=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          SNAKE_DARK="https://raw.githubusercontent.com/Thugger069/Thugger069/main/dist/github-snake-dark.svg"
          SNAKE_LIGHT="https://raw.githubusercontent.com/Thugger069/Thugger069/main/dist/github-snake.svg"
          
          # Create or update README
          if [ ! -f "README.md" ]; then
            cat > README.md << 'EOF'
<div align="center">
  <h1>üë®‚Äçüíª …¨…ß…õ …†ƒ±…¨∆à…ß</h1>
  <h3>DevOps Engineer & Open Source Enthusiast</h3>

  <p align="center">
    <a href="https://github.com/Thugger069">
      <img src="https://komarev.com/ghpvc/?username=Thugger069&color=blueviolet&style=for-the-badge" alt="Profile Views" />
    </a>
    <a href="https://github.com/Thugger069?tab=followers">
      <img src="https://img.shields.io/github/followers/Thugger069?color=green&logo=github&style=for-the-badge" alt="GitHub Followers" />
    </a>
  </p>
EOF
          fi
          
          # Add terminal section
          if ! grep -q "<!-- Terminal Section -->" README.md; then
            cat >> README.md << EOF

  <!-- Terminal Section -->
  <div align="center">
    <h2>üéÆ Live Terminal</h2>
    <picture>
      <source media="(prefers-color-scheme: dark)" srcset="dist/terminal.svg">
      <source media="(prefers-color-scheme: light)" srcset="dist/terminal-light.svg">
      <img src="dist/terminal.svg" alt="Live Terminal Output" width="100%" style="border-radius: 10px; border: 1px solid #2a2b3a; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);">
    </picture>
    <br>
    <sub><em>Last updated: $CURRENT_TIME</em></sub>
  </div>
  <!-- End Terminal Section -->
EOF
          fi
          
          # Close README if needed
          if ! grep -q "^</div>" README.md; then
            cat >> README.md << EOF

  <!-- Footer -->
  <br>
  <div align="center">
    <sub>‚ö° <b>Last Updated:</b> $CURRENT_TIME | üéØ <b>Always learning, always deploying</b></sub>
    <br>
    <sub>Automatically updated via GitHub Actions</sub>
  </div>
</div>
EOF
          fi
          
          echo "‚úÖ Manual update completed"

      - name: Verify changes
        run: |
          echo "üîç Verifying changes..."
          echo "üìÑ Files:"
          ls -la
          echo "üìÅ dist/:"
          ls -la dist/ || echo "No dist directory"
          if [ -f "README.md" ]; then
            echo "üìè README size: $(wc -l < README.md) lines"
          fi

      - name: Commit and push changes
        if: always()
        run: |
          echo "üöÄ Checking for changes..."
          
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "Thugger069"
          
          if git diff --quiet && git diff --staged --quiet; then
            echo "‚è≠Ô∏è No changes to commit"
          else
            echo "üì¶ Changes detected, committing..."
            git add .
            
            COMMIT_MSG="üîÑ Update terminal display"
            if [ "${{ steps.generate-svg.outputs.svg-generated }}" = "true" ]; then
              COMMIT_MSG="$COMMIT_MSG + SVG"
            fi
            COMMIT_MSG="$COMMIT_MSG ($(date -u +'%Y-%m-%d %H:%M:%S UTC'))"
            
            git commit -m "$COMMIT_MSG"
            git push
            echo "‚úÖ Changes committed"
          fi

      - name: Workflow summary
        if: always()
        run: |
          echo ""
          echo "üéâ Workflow Complete"
          echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
          echo "üë§ …¨…ß…õ …†ƒ±…¨∆à…ß (Thugger069)"
          echo "üïí $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          echo "üîß SVG Generated: ${{ steps.generate-svg.outputs.svg-generated || 'N/A' }}"
          echo "üìñ Update Script: ${{ steps.update-script.outputs.script-completed || 'N/A' }}"
          echo ""
          echo "üåê Profile: https://github.com/Thugger069/Thugger069"