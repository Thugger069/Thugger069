name: Update Terminal Display
on: schedule: # Run every 6 hours to keep the terminal fresh - cron: '0 */6 * * *'
Manual trigger from GitHub UI
workflow_dispatch: inputs: skip-svg: description: 'Skip SVG generation (use existing files)' required: false default: false type: boolean
Run when changes are pushed to main branch
push: branches: [ main ]
jobs: update-terminal: runs-on: ubuntu-latest permissions: contents: write
steps:
  - name: Checkout repository
    uses: actions/checkout@v4
    with:
      token: ${{ secrets.GITHUB_TOKEN }}
      fetch-depth: 0

  - name: Setup Node.js
    uses: actions/setup-node@v4
    with:
      node-version: '18'

  - name: Debug information
    run: |
      echo "🕒 Workflow triggered by: ${{ github.event_name }}"
      echo "🎯 Running on branch: ${{ github.ref }}"
      echo "👤 Triggered by: ${{ github.actor }}"
      echo "📁 Workspace: ${{ github.workspace }}"
      ls -la

  - name: Create necessary directories
    run: |
      mkdir -p dist
      mkdir -p scripts
      mkdir -p backup
      echo "📁 Directory structure created"

  - name: Check for existing terminal files
    id: check-files
    run: |
      if [ -f "dist/terminal.svg" ]; then
        echo "terminal-exists=true" >> $GITHUB_OUTPUT
        echo "📄 Existing terminal.svg found"
      else
        echo "terminal-exists=false" >> $GITHUB_OUTPUT
        echo "❌ No existing terminal.svg found"
      fi

  - name: Create enhanced SVG generator script
    run: |
      cat > scripts/generate-terminal-svg.js << 'EOF'
      const fs = require('fs');
      const path = require('path');

      const DIST_DIR = path.resolve(__dirname, '../dist');
      if (!fs.existsSync(DIST_DIR)) fs.mkdirSync(DIST_DIR, { recursive: true });

      const DISPLAY_NAME = "ɬɧɛ ɠıɬƈɧ";
      const GITHUB_USERNAME = "Thugger069";
      const CURRENT_TIME = new Date().toUTCString().replace(/GMT/, 'UTC');

      // Generate random load averages
      const load1 = (Math.random() * 0.8 + 0.1).toFixed(2);
      const load2 = (Math.random() * 0.8 + 0.2).toFixed(2);
      const load3 = (Math.random() * 0.8 + 0.1).toFixed(2);
      const LOAD_AVG = \`\${load1} \${load2} \${load3}\`;

      // Enhanced terminal content
      const lines = [
        \`Last login: \${CURRENT_TIME} on ttys001\`,
        \`\${DISPLAY_NAME}@github ~ % whoami\`,
        \`\${DISPLAY_NAME}\`,
        '',
        \`\${DISPLAY_NAME}@github ~ % uname -a\`,
        \`Darwin github-pro 22.5.0 Darwin Kernel Version 22.5.0: x86_64\`,
        '',
        \`\${DISPLAY_NAME}@github ~ % uptime\`,
        \`\${CURRENT_TIME} up 14 days, 2:51, 1 user, load averages: \${LOAD_AVG}\`,
        '',
        \`\${DISPLAY_NAME}@github ~ % ls -la Projects/\`,
        \`total 48\`,
        \`drwxr-xr-x   9 \${DISPLAY_NAME}  staff   288 Jun 15 10:30 .\`,
        \`drwxr-xr-x   6 \${DISPLAY_NAME}  staff   192 Jun 15 10:30 ..\`,
        \`drwxr-xr-x   8 \${DISPLAY_NAME}  staff   256 Jun 15 10:30 .git\`,
        \`-rw-r--r--   1 \${DISPLAY_NAME}  staff   113 Jun 15 10:30 .gitignore\`,
        \`drwxr-xr-x   7 \${DISPLAY_NAME}  staff   224 Jun 15 10:30 DevOps\`,
        \`drwxr-xr-x   6 \${DISPLAY_NAME}  staff   192 Jun 15 10:30 OpenSource\`,
        \`drwxr-xr-x   5 \${DISPLAY_NAME}  staff   160 Jun 15 10:30 Scripts\`,
        \`-rw-r--r--   1 \${DISPLAY_NAME}  staff  1024 Jun 15 10:30 README.md\`,
        \`-rw-r--r--   1 \${DISPLAY_NAME}  staff   925 Jun 15 10:30 TODO.md\`,
        '',
        \`\${DISPLAY_NAME}@github ~ % cat Projects/TODO.md\`,
        \`# 📋 Current Projects\`,
        \`## 🚀 Active Development\`,
        \`- [ ] Kubernetes cluster autoscaling\`,
        \`- [ ] Terraform multi-cloud deployment\`,
        \`- [ ] CI/CD pipeline optimization\`,
        \`- [ ] Monitoring stack with Prometheus & Grafana\`,
        '',
        \`## 🔄 Maintenance\`,
        \`- [ ] Update Docker container security\`,
        \`- [ ] Backup strategy implementation\`,
        '',
        \`\${DISPLAY_NAME}@github ~ % docker ps\`,
        \`CONTAINER ID   IMAGE           COMMAND                  STATUS       PORTS     NAMES\`,
        \`a1b2c3d4e5f6   nginx:alpine    "nginx -g 'daemon off;" Up 2 hours   80/tcp    webserver\`,
        \`f6e5d4c3b2a1   redis:7-alpine  "docker-entrypoint.s…"  Up 2 hours   6379/tcp  cache\`,
        '',
        \`\${DISPLAY_NAME}@github ~ %\`
      ];

      // Cyberpunk theme
      const theme = {
        background: '#1a1b26',
        text: '#c0caf5',
        accent: '#7dcfff',
        border: '#2ac3de',
        headerBg: '#16161e'
      };

      const LINE_HEIGHT = 18;
      const PADDING = 20;
      const height = lines.length * LINE_HEIGHT + PADDING * 2 + 30;
      const maxLineLength = Math.max(...lines.map(line => line.length));
      const CHAR_WIDTH = 8;
      const width = Math.max(800, maxLineLength * CHAR_WIDTH + PADDING * 2);

      const svgDark = \`<svg width="\${width}" height="\${height}" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop offset="0%" stop-color="\${theme.background}" />
            <stop offset="100%" stop-color="#16161e" />
          </linearGradient>
          <filter id="glow" x="-20%" y="-20%" width="140%" height="140%">
            <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
            <feMerge> 
              <feMergeNode in="coloredBlur"/>
              <feMergeNode in="SourceGraphic"/>
            </feMerge>
          </filter>
        </defs>
        
        <!-- Terminal window -->
        <rect width="100%" height="100%" rx="12" ry="12" fill="url(#bgGradient)" 
              stroke="\${theme.border}" stroke-width="2" filter="url(#glow)"/>
        
        <!-- Terminal header -->
        <rect x="0" y="0" width="100%" height="30" rx="12" ry="12" fill="\${theme.headerBg}" 
              stroke="\${theme.border}" stroke-width="2"/>
        <circle cx="15" cy="15" r="4" fill="#ff5f56"/>
        <circle cx="30" cy="15" r="4" fill="#ffbd2e"/>
        <circle cx="45" cy="15" r="4" fill="#27ca3f"/>
        <text x="60" y="18" style="font-family: 'Monaco', 'Consolas', monospace; font-size: 12px; fill: \${theme.text}; font-weight: bold;">\${DISPLAY_NAME}@github: ~</text>
        
        <style>
          .line { 
            font-family: 'Monaco', 'Consolas', 'Courier New', monospace; 
            font-size: 14px; 
            fill: \${theme.text};
            white-space: pre;
          }
          .accent { 
            fill: \${theme.accent};
            font-weight: bold;
          }
        </style>
        
        <!-- Terminal content -->
        \${lines.map((line, idx) => 
          \`<text x="\${PADDING}" y="\${PADDING + 30 + idx * LINE_HEIGHT}" class="line">\${line}</text>\`
        ).join('')}
        
        <!-- Blinking cursor -->
        <text x="\${PADDING}" y="\${PADDING + 30 + (lines.length - 1) * LINE_HEIGHT + 4}" 
              class="accent">█
          <animate attributeName="opacity" values="1;0;1" dur="1s" repeatCount="indefinite" />
        </text>
      </svg>\`;

      // Light theme variant
      const lightTheme = {
        background: '#ffffff',
        text: '#333333',
        accent: '#0366d6',
        border: '#d1d5da',
        headerBg: '#f6f8fa'
      };

      const svgLight = svgDark
        .replace(new RegExp(theme.background, 'g'), lightTheme.background)
        .replace(new RegExp(theme.text, 'g'), lightTheme.text)
        .replace(new RegExp(theme.accent, 'g'), lightTheme.accent)
        .replace(new RegExp(theme.border, 'g'), lightTheme.border)
        .replace(new RegExp(theme.headerBg, 'g'), lightTheme.headerBg);

      try {
        fs.writeFileSync(path.join(DIST_DIR, 'terminal.svg'), svgDark);
        fs.writeFileSync(path.join(DIST_DIR, 'terminal-light.svg'), svgLight);
        console.log("✅ Enhanced terminal SVGs generated!");
        console.log("📁 Files: terminal.svg, terminal-light.svg");
        console.log(\`📏 Dimensions: \${width}x\${height}px\`);
      } catch (error) {
        console.error("❌ Error generating SVG files:", error);
        process.exit(1);
      }
      EOF
      echo "📝 SVG generator script created successfully"

  - name: Generate terminal SVGs
    id: generate-svg
    run: |
      if [ "${{ inputs.skip-svg }}" = "true" ] && [ -f "dist/terminal.svg" ]; then
        echo "⏭️ Skipping SVG generation as requested, using existing files"
        echo "svg-generated=false" >> $GITHUB_OUTPUT
      else
        echo "🎨 Generating terminal SVGs..."
        if node scripts/generate-terminal-svg.js; then
          echo "✅ SVG generation successful"
          echo "svg-generated=true" >> $GITHUB_OUTPUT
          echo "📄 Generated files in dist/:"
          ls -la dist/
        else
          echo "❌ SVG generation failed"
          echo "svg-generated=false" >> $GITHUB_OUTPUT
          exit 1
        fi
      fi

  - name: Create or update README
    id: update-readme
    run: |
      echo "📖 Updating README.md..."
      
      GITHUB_SNAKE_DARK="https://raw.githubusercontent.com/Thugger069/Thugger069/main/dist/github-snake-dark.svg"
      GITHUB_SNAKE_LIGHT="https://raw.githubusercontent.com/Thugger069/Thugger069/main/dist/github-snake.svg"
      CURRENT_TIME=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
      
      # Create basic README if it doesn't exist
      if [ ! -f "README.md" ]; then
        echo "📝 Creating new README.md..."
        cat > README.md << 'README'

      # Add terminal section
      if grep -q "<!-- Terminal Section -->" README.md; then
        echo "🔄 Updating existing terminal section..."
        # Use a temporary file for the update
        cat > README_temp.md << 'TERMINAL'

      # Add other sections if they don't exist
      if ! grep -q "<!-- Tech Stack -->" README.md; then
        cat >> README.md << 'STACK'

      if ! grep -q "<!-- GitHub Stats -->" README.md; then
        cat >> README.md << 'STATS'

      if ! grep -q "<!-- GitHub Snake -->" README.md; then
        cat >> README.md << 'SNAKE'

      # Close the main div and add footer
      if ! grep -q "^</div>" README.md; then
        cat >> README.md << 'FOOTER'

      echo "✅ README.md updated successfully"
      echo "readme-updated=true" >> $GITHUB_OUTPUT

  - name: Verify changes
    run: |
      echo "🔍 Verifying changes..."
      echo "📄 Files in repository:"
      ls -la
      echo "📁 Contents of dist/:"
      ls -la dist/ || echo "dist/ directory not found"

  - name: Commit and push changes
    if: always()
    run: |
      echo "🚀 Checking for changes to commit..."
      
         git config --local user.email "thugger069"
         git config --local user.name "41898282+github-actions[bot]@users.noreply.github.com"                 
      
      if git diff --quiet && git diff --staged --quiet; then
        echo "⏭️ No changes to commit"
      else
        echo "📦 Changes detected, preparing commit..."
        git add .
        
        COMMIT_MSG="🔄 Auto-update terminal display"
        if [ "${{ steps.generate-svg.outputs.svg-generated }}" = "true" ]; then
          COMMIT_MSG="$COMMIT_MSG + SVG"
        fi
        if [ "${{ steps.update-readme.outputs.readme-updated }}" = "true" ]; then
          COMMIT_MSG="$COMMIT_MSG + README"
        fi
        COMMIT_MSG="$COMMIT_MSG ($(date -u +'%Y-%m-%d %H:%M:%S UTC'))"
        
        echo "💾 Committing: $COMMIT_MSG"
        git commit -m "$COMMIT_MSG"
        echo "📤 Pushing changes..."
        git push
        echo "✅ Changes committed and pushed successfully"
      fi

  - name: Workflow summary
    if: always()
    run: |
      echo ""
      echo "🎉 Workflow Summary"
      echo "═══════════════════════════════════════"
      echo "👤 Profile: ɬɧɛ ɠıɬƈɧ (Thugger069)"
      echo "🕒 Timestamp: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
      echo "🔧 SVG Generated: ${{ steps.generate-svg.outputs.svg-generated || 'false' }}"
      echo "📖 README Updated: ${{ steps.update-readme.outputs.readme-updated || 'false' }}"
      echo ""
      echo "🌐 View your updated profile:"
      echo "   https://github.com/Thugger069/Thugger069"
