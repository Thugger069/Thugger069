name: Update Terminal Display
on:
  schedule:
    # Run every 6 hours to keep the terminal fresh
    - cron: '0 */6 * * *'
  # Manual trigger from GitHub UI
  workflow_dispatch:
    inputs:
      skip-svg:
        description: 'Skip SVG generation (use existing files)'
        required: false
        default: 'false'
        type: boolean
  # Run when changes are pushed to main branch
  push:
    branches: [ main ]

jobs:
  update-terminal:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Debug information
        run: |
          echo "🕒 Workflow triggered by: ${{ github.event_name }}"
          echo "🎯 Running on branch: ${{ github.ref }}"
          echo "👤 Triggered by: ${{ github.actor }}"
          echo "📁 Workspace: ${{ github.workspace }}"
          ls -la

      - name: Create necessary directories
        run: |
          mkdir -p dist
          mkdir -p scripts
          mkdir -p backup
          echo "📁 Directory structure created"

      - name: Check for existing terminal files
        id: check-files
        run: |
          if [ -f "dist/terminal.svg" ]; then
            echo "terminal-exists=true" >> $GITHUB_OUTPUT
            echo "📄 Existing terminal.svg found"
          else
            echo "terminal-exists=false" >> $GITHUB_OUTPUT
            echo "❌ No existing terminal.svg found"
          fi

      - name: Create enhanced SVG generator script
        run: |
          cat > scripts/generate-terminal-svg.js << 'EOF'
          const fs = require('fs');
          const path = require('path');

          const DIST_DIR = path.resolve(__dirname, '../dist');
          if (!fs.existsSync(DIST_DIR)) fs.mkdirSync(DIST_DIR, { recursive: true });

          const DISPLAY_NAME = "ɬɧɛ ɠıɬƈɧ";
          const GITHUB_USERNAME = "Thugger069";
          const CURRENT_TIME = new Date().toUTCString().replace(/GMT/, 'UTC');

          // Enhanced terminal content
          const lines = [
            `Last login: \${CURRENT_TIME} on ttys001`,
            `\${DISPLAY_NAME}@github ~ % whoami`,
            `\${DISPLAY_NAME}`,
            '',
            `\${DISPLAY_NAME}@github ~ % uname -a`,
            `Darwin github-pro 22.5.0 Darwin Kernel Version 22.5.0: x86_64`,
            '',
            `\${DISPLAY_NAME}@github ~ % uptime`,
            `\${CURRENT_TIME} up 14 days, 2:51, 1 user, load averages: 0.56 0.62 0.48`,
            '',
            `\${DISPLAY_NAME}@github ~ % ls -la Projects/`,
            `total 48`,
            `drwxr-xr-x   9 \${DISPLAY_NAME}  staff   288 Jun 15 10:30 .`,
            `drwxr-xr-x   6 \${DISPLAY_NAME}  staff   192 Jun 15 10:30 ..`,
            `drwxr-xr-x   8 \${DISPLAY_NAME}  staff   256 Jun 15 10:30 .git`,
            `-rw-r--r--   1 \${DISPLAY_NAME}  staff   113 Jun 15 10:30 .gitignore`,
            `drwxr-xr-x   7 \${DISPLAY_NAME}  staff   224 Jun 15 10:30 DevOps`,
            `drwxr-xr-x   6 \${DISPLAY_NAME}  staff   192 Jun 15 10:30 OpenSource`,
            `drwxr-xr-x   5 \${DISPLAY_NAME}  staff   160 Jun 15 10:30 Scripts`,
            `-rw-r--r--   1 \${DISPLAY_NAME}  staff  1024 Jun 15 10:30 README.md`,
            `-rw-r--r--   1 \${DISPLAY_NAME}  staff   925 Jun 15 10:30 TODO.md`,
            '',
            `\${DISPLAY_NAME}@github ~ % cat Projects/TODO.md`,
            `# 📋 Current Projects`,
            `## 🚀 Active Development`,
            `- [ ] Kubernetes cluster autoscaling`,
            `- [ ] Terraform multi-cloud deployment`,
            `- [ ] CI/CD pipeline optimization`,
            `- [ ] Monitoring stack with Prometheus & Grafana`,
            '',
            `\${DISPLAY_NAME}@github ~ % docker ps`,
            `CONTAINER ID   IMAGE           COMMAND                  STATUS       PORTS     NAMES`,
            `a1b2c3d4e5f6   nginx:alpine    "nginx -g 'daemon off;" Up 2 hours   80/tcp    webserver`,
            `f6e5d4c3b2a1   redis:7-alpine  "docker-entrypoint.s…"  Up 2 hours   6379/tcp  cache`,
            '',
            `\${DISPLAY_NAME}@github ~ %`
          ];

          // Cyberpunk theme
          const theme = {
            background: '#1a1b26',
            text: '#c0caf5',
            accent: '#7dcfff',
            border: '#2ac3de',
            headerBg: '#16161e'
          };

          const LINE_HEIGHT = 18;
          const PADDING = 20;
          const height = lines.length * LINE_HEIGHT + PADDING * 2 + 30;
          const maxLineLength = Math.max(...lines.map(line => line.length));
          const CHAR_WIDTH = 8;
          const width = Math.max(800, maxLineLength * CHAR_WIDTH + PADDING * 2);

          const svgDark = `<svg width="\${width}" height="\${height}" xmlns="http://www.w3.org/2000/svg">
            <defs>
              <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" stop-color="\${theme.background}" />
                <stop offset="100%" stop-color="#16161e" />
              </linearGradient>
              <filter id="glow" x="-20%" y="-20%" width="140%" height="140%">
                <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
                <feMerge> 
                  <feMergeNode in="coloredBlur"/>
                  <feMergeNode in="SourceGraphic"/>
                </feMerge>
              </filter>
            </defs>
            
            <rect width="100%" height="100%" rx="12" ry="12" fill="url(#bgGradient)" 
                  stroke="\${theme.border}" stroke-width="2" filter="url(#glow)"/>
            
            <rect x="0" y="0" width="100%" height="30" rx="12" ry="12" fill="\${theme.headerBg}" 
                  stroke="\${theme.border}" stroke-width="2"/>
            <circle cx="15" cy="15" r="4" fill="#ff5f56"/>
            <circle cx="30" cy="15" r="4" fill="#ffbd2e"/>
            <circle cx="45" cy="15" r="4" fill="#27ca3f"/>
            <text x="60" y="18" style="font-family: 'Monaco', 'Consolas', monospace; font-size: 12px; fill: \${theme.text}; font-weight: bold;">\${DISPLAY_NAME}@github: ~</text>
            
            <style>
              .line { 
                font-family: 'Monaco', 'Consolas', 'Courier New', monospace; 
                font-size: 14px; 
                fill: \${theme.text};
                white-space: pre;
              }
              .accent { 
                fill: \${theme.accent};
                font-weight: bold;
              }
            </style>
            
            \${lines.map((line, idx) => 
              `<text x="\${PADDING}" y="\${PADDING + 30 + idx * LINE_HEIGHT}" class="line">\${line}</text>`
            ).join('')}
            
            <text x="\${PADDING}" y="\${PADDING + 30 + (lines.length - 1) * LINE_HEIGHT + 4}" 
                  class="accent">█
              <animate attributeName="opacity" values="1;0;1" dur="1s" repeatCount="indefinite" />
            </text>
          </svg>`;

          // Light theme variant
          const lightTheme = {
            background: '#ffffff',
            text: '#333333',
            accent: '#0366d6',
            border: '#d1d5da',
            headerBg: '#f6f8fa'
          };

          const svgLight = svgDark
            .replace(new RegExp(theme.background, 'g'), lightTheme.background)
            .replace(new RegExp(theme.text, 'g'), lightTheme.text)
            .replace(new RegExp(theme.accent, 'g'), lightTheme.accent)
            .replace(new RegExp(theme.border, 'g'), lightTheme.border)
            .replace(new RegExp(theme.headerBg, 'g'), lightTheme.headerBg);

          fs.writeFileSync(path.join(DIST_DIR, 'terminal.svg'), svgDark);
          fs.writeFileSync(path.join(DIST_DIR, 'terminal-light.svg'), svgLight);

          console.log("✅ Enhanced terminal SVGs generated!");
          console.log("📁 Files: terminal.svg, terminal-light.svg");
          EOF

          echo "📝 SVG generator script created"

      - name: Make scripts executable
        run: |
          chmod +x scripts/update-terminal.sh || true
          chmod +x scripts/*.js || true
          echo "🔧 Scripts made executable"

      - name: Generate terminal SVGs
        id: generate-svg
        run: |
          if [ "${{ inputs.skip-svg }}" = "true" ]; then
            echo "⏭️ Skipping SVG generation as requested"
            echo "svg-generated=false" >> $GITHUB_OUTPUT
          else
            echo "🎨 Generating terminal SVGs..."
            if node scripts/generate-terminal-svg.js; then
              echo "✅ SVG generation successful"
              echo "svg-generated=true" >> $GITHUB_OUTPUT
              
              # Display file info
              echo "📄 Generated files:"
              ls -la dist/terminal*.svg
              
              # Verify SVG content
              echo "🔍 SVG preview (first few lines):"
              head -5 dist/terminal.svg
            else
              echo "❌ SVG generation failed"
              echo "svg-generated=false" >> $GITHUB_OUTPUT
              exit 1
            fi
          fi

      - name: Create or update README
        id: update-readme
        run: |
          echo "📖 Updating README.md..."
          
          # GitHub snake URLs
          GITHUB_SNAKE_DARK="https://raw.githubusercontent.com/Thugger069/Thugger069/main/dist/github-snake-dark.svg"
          GITHUB_SNAKE_LIGHT="https://raw.githubusercontent.com/Thugger069/Thugger069/main/dist/github-snake.svg"
          CURRENT_TIME=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          # Check if README exists
          if [ ! -f "README.md" ]; then
            echo "📝 Creating new README.md..."
            cat > README.md << 'README_EOF'
          <div align="center">
            <h1>👨‍💻 ɬɧɛ ɠıɬƈɧ</h1>
            <h3>DevOps Engineer & Open Source Enthusiast</h3>

            <!-- Badges -->
            <p align="center">
              <a href="https://github.com/Thugger069">
                <img src="https://komarev.com/ghpvc/?username=Thugger069&color=blueviolet&style=for-the-badge" alt="Profile Views" />
              </a>
              <a href="https://github.com/Thugger069?tab=followers">
                <img src="https://img.shields.io/github/followers/Thugger069?color=green&logo=github&style=for-the-badge" alt="GitHub Followers" />
              </a>
            </p>
          README_EOF
          fi
          
          # Add or update terminal section
          if grep -q "<!-- Terminal Display -->" README.md; then
            echo "🔄 Updating existing terminal section..."
            # Use sed to update the terminal section
            sed -i '/<!-- Terminal Display -->/,/<!-- End Terminal Display -->/c\
          <!-- Terminal Display -->\
          <div align="center">\
            <h3>🎮 Live Terminal</h3>\
            <picture>\
              <source media="(prefers-color-scheme: dark)" srcset="dist/terminal.svg">\
              <source media="(prefers-color-scheme: light)" srcset="dist/terminal-light.svg">\
              <img src="dist/terminal.svg" alt="Live Terminal Output" width="100%" style="border-radius: 10px; border: 1px solid #2a2b3a; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);">\
            </picture>\
            <br>\
            <sub><em>Last updated: '"$CURRENT_TIME"'</em></sub>\
          </div>\
          <!-- End Terminal Display -->' README.md
          else
            echo "📝 Adding new terminal section..."
            cat >> README.md << 'TERMINAL_EOF'

          <!-- Terminal Display -->
          <div align="center">
            <h3>🎮 Live Terminal</h3>
            <picture>
              <source media="(prefers-color-scheme: dark)" srcset="dist/terminal.svg">
              <source media="(prefers-color-scheme: light)" srcset="dist/terminal-light.svg">
              <img src="dist/terminal.svg" alt="Live Terminal Output" width="100%" style="border-radius: 10px; border: 1px solid #2a2b3a; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);">
            </picture>
            <br>
            <sub><em>Last updated: $CURRENT_TIME</em></sub>
          </div>
          <!-- End Terminal Display -->
          TERMINAL_EOF
          fi
          
          # Add tech stack and stats if not present
          if ! grep -q "🛠️ Tech Stack" README.md; then
            cat >> README.md << 'CONTENT_EOF'

          <!-- Tech Stack -->
          <h3 align="center">🛠️ Tech Stack</h3>
          <p align="center">
            <img src="https://skillicons.dev/icons?i=linux,docker,kubernetes,aws,bash,python,go,terraform,prometheus,grafana,git,github,gitlab,vscode&perline=7" alt="Tech Stack" />
          </p>

          <!-- GitHub Stats -->
          <h3 align="center">📊 GitHub Analytics</h3>
          <p align="center">
            <img height="165" src="https://github-readme-stats.vercel.app/api?username=Thugger069&show_icons=true&theme=radical&hide_border=true&bg_color=1a1b26&title_color=7dcfff&icon_color=bb9af7&text_color=c0caf5" />
            <img height="165" src="https://github-readme-stats.vercel.app/api/top-langs/?username=Thugger069&layout=compact&theme=radical&hide_border=true&bg_color=1a1b26&title_color=7dcfff&text_color=c0caf5" />
          </p>
          
          <p align="center">
            <img src="https://github-readme-streak-stats.herokuapp.com/?user=Thugger069&theme=radical&hide_border=true&background=1a1b26&ring=7dcfff&fire=7dcfff&currStreakLabel=7dcfff" />
          </p>

          <!-- GitHub Snake -->
          <h3 align="center">🐍 GitHub Contributions</h3>
          <p align="center">
            <picture>
              <source media="(prefers-color-scheme: dark)" srcset="$GITHUB_SNAKE_DARK" />
              <source media="(prefers-color-scheme: light)" srcset="$GITHUB_SNAKE_LIGHT" />
              <img alt="GitHub Contribution Snake" src="$GITHUB_SNAKE_LIGHT" width="100%" style="border-radius: 10px;" />
            </picture>
          </p>

          <!-- Footer -->
          <div align="center" style="margin-top: 30px;">
            <sub>⚡ <b>Last Updated:</b> $CURRENT_TIME | 🎯 <b>Always learning, always deploying</b></sub>
            <br>
            <sub>Automatically updated via GitHub Actions</sub>
          </div>
          </div>
          CONTENT_EOF
          fi
          
          echo "✅ README.md updated successfully"
          echo "readme-updated=true" >> $GITHUB_OUTPUT

      - name: Verify changes
        run: |
          echo "🔍 Verifying changes..."
          echo "📄 Files modified:"
          git status --porcelain
          
          echo "📊 README preview (first 20 lines):"
          head -20 README.md
          
          if [ -f "dist/terminal.svg" ]; then
            echo "✅ terminal.svg exists"
            echo "📏 File size: $(wc -c < dist/terminal.svg) bytes"
          else
            echo "❌ terminal.svg missing"
          fi

      - name: Commit and push changes
        if: always() && steps.generate-svg.outputs.svg-generated == 'true' || steps.update-readme.outputs.readme-updated == 'true'
        run: |
          echo "🚀 Committing and pushing changes..."
          
          # Configure git
          git config --local user.email "thugger069"
          git config --local user.name "41898282+github-actions[bot]@users.noreply.github.com"       
          # Add all changes
          git add .
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "⏭️ No changes to commit"
          else
            echo "📦 Changes detected, creating commit..."
            
            # Create commit message based on what changed
            COMMIT_MSG="🔄 Auto-update: "
            
            if [ "${{ steps.generate-svg.outputs.svg-generated }}" = "true" ]; then
              COMMIT_MSG="$COMMIT_MSG terminal"
            fi
            
            if [ "${{ steps.update-readme.outputs.readme-updated }}" = "true" ]; then
              if [ "${{ steps.generate-svg.outputs.svg-generated }}" = "true" ]; then
                COMMIT_MSG="$COMMIT_MSG +"
              fi
              COMMIT_MSG="$COMMIT_MSG README"
            fi
            
            COMMIT_MSG="$COMMIT_MSG ($(date -u +'%Y-%m-%d %H:%M:%S UTC'))"
            
            git commit -m "$COMMIT_MSG"
            git push
            echo "✅ Changes committed and pushed: $COMMIT_MSG"
          fi

      - name: Workflow summary
        if: always()
        run: |
          echo "🎉 Workflow completed successfully!"
          echo ""
          echo "📋 Summary:"
          echo "  👤 User: ɬɧɛ ɠıɬƈɧ (Thugger069)"
          echo "  🕒 Timestamp: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          echo "  📁 SVG Generated: ${{ steps.generate-svg.outputs.svg-generated }}"
          echo "  📖 README Updated: ${{ steps.update-readme.outputs.readme-updated }}"
          echo ""
          echo "🌐 Your updated profile will be available at:"
          echo "   https://github.com/Thugger069/Thugger069"
   